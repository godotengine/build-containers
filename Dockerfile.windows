ARG img_version
FROM godot-mono:${img_version}

ARG mono_version

RUN if [ -z "${mono_version}" ]; then echo -e "\n\nargument mono-version is mandatory!\n\n"; exit 1; fi && \
    cd /root/files && \
    dnf -y install --setopt=install_weak_deps=False \
    #  mingw32-gcc mingw32-gcc-c++ mingw32-winpthreads-static mingw64-gcc mingw64-gcc-c++ mingw64-winpthreads-static && \
    # Patched mingw-gcc to fix https://github.com/godotengine/godot/issues/50970
      mingw32-cpp-10.3.1-1.godot50970.fc34.x86_64.rpm mingw64-cpp-10.3.1-1.godot50970.fc34.x86_64.rpm \
      mingw32-gcc-10.3.1-1.godot50970.fc34.x86_64.rpm mingw64-gcc-10.3.1-1.godot50970.fc34.x86_64.rpm \
      mingw32-gcc-c++-10.3.1-1.godot50970.fc34.x86_64.rpm mingw64-gcc-c++-10.3.1-1.godot50970.fc34.x86_64.rpm \
      mingw32-winpthreads-static mingw64-winpthreads-static && \
    cp -a /root/files/${mono_version} /root && \
    export MONO_SOURCE_ROOT=/root/${mono_version} && \
    cd /root/${mono_version}/godot-mono-builds && \
    python3 windows.py configure -j --target=x86_64 --target=x86 --mxe-prefix=/usr && \
    python3 windows.py make -j --target=x86_64 --target=x86 --mxe-prefix=/usr && \
    # 'desktop' bcl needed to build 'desktop-win32', then we can remove it.
    python3 bcl.py make -j --product=desktop && \
    python3 bcl.py make -j --product=desktop-win32 && \
    rm -rf /root/mono-installs/desktop-bcl && \
    python3 windows.py copy-bcl --target=x86_64 --target=x86 && \
    cd /root && \
    rm -rf /root/${mono_version}

CMD /bin/bash
