ARG img_version
FROM godot-mono:${img_version}

ARG mono_version

RUN if [ -z "${mono_version}" ]; then echo -e "\n\nargument mono-version is mandatory!\n\n"; exit 1; fi && \
    dnf -y install --setopt=install_weak_deps=False \
      mingw32-gcc mingw32-gcc-c++ mingw32-winpthreads-static mingw64-gcc mingw64-gcc-c++ mingw64-winpthreads-static yasm wine && \
    cp -a /root/files/${mono_version} /root && \
    cd /root/${mono_version} && \
    patch -p1 < /root/files/patches/wine-mono.patch && \
    export WINE_BITS=64 && \
    bash /root/files/mono-build-win32.sh --prefix=/root/dependencies/mono-64 --host=x86_64-w64-mingw32 && \
    git clean -fdx && \
    cp /root/dependencies/mono-64/bin/libMonoPosixHelper.dll /root/dependencies/mono-64/bin/MonoPosixHelper.dll && \
    rm -f /root/dependencies/mono-64/bin/mono /root/dependencies/mono-64/bin/mono-sgen && \
    ln -s /usr/bin/mono /root/dependencies/mono-64/bin/mono && \
    ln -s /usr/bin/mono-sgen /root/dependencies/mono-64/bin/mono-sgen && \
    cp -rvp /etc/mono /root/dependencies/mono-64/etc && \
    export WINE_BITS=32 && \
    bash /root/files/mono-build-win32.sh --prefix=/root/dependencies/mono-32 --host=i686-w64-mingw32 && \
    cd /root && \
    rm -rf /root/${mono_version} && \
    cp /root/dependencies/mono-32/bin/libMonoPosixHelper.dll /root/dependencies/mono-32/bin/MonoPosixHelper.dll && \
    rm -f /root/dependencies/mono-32/bin/mono /root/dependencies/mono-32/bin/mono-sgen && \
    ln -s /usr/bin/mono /root/dependencies/mono-32/bin/mono && \
    ln -s /usr/bin/mono-sgen /root/dependencies/mono-32/bin/mono-sgen && \
    cp -rvp /etc/mono /root/dependencies/mono-32/etc && \
    dnf -y remove wine

CMD /bin/bash
