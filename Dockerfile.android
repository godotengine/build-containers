ARG img_version
FROM godot-mono:${img_version}

ARG mono_version

RUN if [ -z "${mono_version}" ]; then echo -e "\n\nargument mono-version is mandatory!\n\n"; exit 1; fi && \
    dnf -y install --setopt=install_weak_deps=False \
      gcc gcc-c++ java-1.8.0-openjdk-devel ncurses-compat-libs && \
    mkdir sdk && cd sdk && \
    curl -LO https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip && \
    unzip sdk-tools-linux-4333796.zip && \
    rm sdk-tools-linux-4333796.zip && \
    yes | tools/bin/sdkmanager --licenses && \
    tools/bin/sdkmanager ndk-bundle 'build-tools;28.0.3' 'platforms;android-28' 'cmake;3.10.2.4988404'

ENV ANDROID_HOME=/root/sdk/
ENV ANDROID_NDK_ROOT=/root/sdk/ndk-bundle/

RUN cp -a /root/files/${mono_version} /root && \
    export MONO_SOURCE_ROOT=/root/${mono_version} && \
    export make="make -j" && \
    git clone --progress https://github.com/godotengine/godot-mono-builds /root/godot-mono-builds && \
    cd /root/godot-mono-builds && \
    git checkout 710b275fbf29ddb03fd5285c51782951a110cdab && \
    python3 patch_mono.py && \
    python3 android.py configure --target=all-runtime && \
    python3 android.py make --target=all-runtime && \
    cd /root/${mono_version} && git clean -fdx && NOCONFIGURE=1 ./autogen.sh && \
    cd /root/godot-mono-builds && \
    python3 bcl.py make --product=android && \
    cd /root && \
    rm -rf /root/${mono_version} /root/godot-mono-builds

CMD /bin/bash
